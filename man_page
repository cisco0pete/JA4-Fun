#############################################################
# JA4+ ZEEK FINGERPRINT EXTRACTION SCRIPTS
# Personal Project by [Peter Gaudiomonte]
#############################################################

# INTRODUCTION
# -----------------------------------------------------------
# This is a personal project intended to improve the user-friendliness
# and data accessibility of JA4+ fingerprints generated by the official
# Zeek JA4+ plugin.
#
# The primary goal is to provide a manual, on-demand method to extract
# connection details and JA4+ fingerprints from Zeek logs, transforming
# raw tab-separated data into structured CSV and JSON formats for analysis.
#
# Future work will focus on automating these extraction processes.

# SCRIPT SUMMARY
# -----------------------------------------------------------
# Four scripts are used to process four different Zeek log types:
#
# 1. ja4h_http_parser.py: Extracts JA4H from http.log
# 2. ja4_ssl_parser.py: Extracts JA4 and JA4S from ssl.log
# 3. ja4t_conn_parser.py: Extracts JA4T and JA4TS from conn.log
# 4. ja4x_x509_parser.py: Extracts JA4X from x509.log

# SCRIPT DETAILS AND ARGUMENTS
# -----------------------------------------------------------

# 1. JA4H (HTTP) PARSER: ja4h_http_parser.py
# ------------------------------------------
# Parses: http.log
# Fields Extracted: uid, src_ip, src_port, dst_ip, dst_port, method, host, uri, user_agent, status_code, ja4h
#
# USAGE: ./ja4h_http_parser.py [LOG_FILE_PATH] [OUTPUT_DIR]
#
# ARGUMENTS:
#   [1] LOG_FILE_PATH       Path to the input Zeek http.log file.
#                           (Default: /mnt/zeek_logs/current/http.log) ##
#   [2] OUTPUT_DIR          Directory to save the resulting CSV/JSON files.
#                           (Default: /mnt/zeek_logs/ja4/ja4h_http_hourly)
#
#
#### Remember, the default directory for Zeek is /opt/Zeek.. My instance is running off a USB stick
#
# EXAMPLES:
# $ ./ja4h_http_parser.py
# $ ./ja4h_http_parser.py /path/to/archive/http.2024-01-01.log (Archive Files not tested yet)
# $ ./ja4h_http_parser.py /tmp/test_http.log /home/user/ja4_reports

# 2. JA4 / JA4S (SSL) PARSER: ja4_ssl_parser.py
# ----------------------------------------------
# Parses: ssl.log
# Fields Extracted: uid, src_ip, src_port, dst_ip, dst_port, version, cipher, server_name, ja4, ja4s
#
# USAGE: ./ja4_ssl_parser.py [LOG_FILE_PATH] [OUTPUT_DIR]
#
# ARGUMENTS:
#   [1] LOG_FILE_PATH       Path to the input Zeek ssl.log file.
#                           (Default: /mnt/zeek_logs/current/ssl.log)
#   [2] OUTPUT_DIR          Directory to save the resulting CSV/JSON files.
#                           (Default: /mnt/zeek_logs/ja4/ja4s_ssl_hourly)
#
# EXAMPLES:
# $ ./ja4_ssl_parser.py
# $ ./ja4_ssl_parser.py /path/to/archive/ssl.2024-01-01.log

# 3. JA4T / JA4TS (TCP) PARSER: ja4t_conn_parser.py
# ------------------------------------------------
# Parses: conn.log
# Fields Extracted: uid, src_ip, src_port, dst_ip, dst_port, ja4t, ja4ts
#
# USAGE: ./ja4t_conn_parser.py [LOG_FILE_PATH] [OUTPUT_DIR]
#
# ARGUMENTS:
#   [1] LOG_FILE_PATH       Path to the input Zeek conn.log file.
#                           (Default: /mnt/zeek_logs/current/conn.log)
#   [2] OUTPUT_DIR          Directory to save the resulting CSV/JSON files.
#                           (Default: /mnt/zeek_logs/ja4/ja4t_ja4ts_hourly)
#
# EXAMPLES:
# $ ./ja4t_conn_parser.py
# $ ./ja4t_conn_parser.py /mnt/zeek_logs/current/conn.log /tmp/tcp_fingerprints

# 4. JA4X (X.509) PARSER: ja4x_x509_parser.py
# -------------------------------------------
# Parses: x509.log
# Fields Extracted: uid, fuid, id.orig_h, id.resp_h, ja4x, cert_info (nested)
#
# USAGE: ./ja4x_x509_parser.py [OPTIONS]
#
# OPTIONS:
#   --input_file            Path to the input Zeek x509.log file.
#                           (Default: /mnt/zeek_logs/current/x509.log)
#
# NOTE: Output directory is hardcoded inside the script for consistency.
#       (Default: /mnt/zeek_logs/ja4/ja4x_x509_hourly)
#
# EXAMPLES:
# $ ./ja4x_x509_parser.py
# $ ./ja4x_x509_parser.py --input_file /path/to/my_x509_export.log

# END OF DOCUMENT
#############################################################
